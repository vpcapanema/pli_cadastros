# Configura√ß√£o de Deploy - SIGMA-PLI
# =====================================
# 
# INSTRU√á√ïES:
# 1. Copie este arquivo para deploy-config.sh
# 2. Edite as vari√°veis abaixo com seus dados
# 3. Execute: source deploy-config.sh
# 4. Use os scripts normalmente
#
# N√ÉO INCLUA ESTE ARQUIVO NO GIT AP√ìS PREENCHIDO!

# ========================================
# CONFIGURA√á√ïES DA AWS EC2
# ========================================

# IP p√∫blico ou hostname da sua inst√¢ncia EC2
# Exemplo: "52.23.45.67" ou "ec2-52-23-45-67.compute-1.amazonaws.com"
export EC2_HOST=""

# Caminho para sua chave SSH privada (.pem)
# Exemplo Linux/macOS: "/home/usuario/.ssh/pli-cadastros-key.pem"
# Exemplo Windows: "C:\Users\Usuario\.ssh\pli-cadastros-key.pem"
export KEY_FILE=""

# Usu√°rio SSH (geralmente 'ubuntu' para Ubuntu, 'ec2-user' para Amazon Linux)
export EC2_USER="ubuntu"

# ========================================
# CONFIGURA√á√ïES DA APLICA√á√ÉO
# ========================================

# Diret√≥rio da aplica√ß√£o no servidor
export APP_DIR="/home/ubuntu/pli_cadastros"

# Nome da aplica√ß√£o no PM2
export PM2_APP_NAME="pli-cadastros"

# Reposit√≥rio Git (ajuste se necess√°rio)
export GIT_REPO="https://github.com/vpcapanema/pli_cadastros.git"

# ========================================
# VERIFICA√á√ÉO DA CONFIGURA√á√ÉO
# ========================================

check_config() {
    local errors=0
    
    echo "üîç Verificando configura√ß√£o..."
    
    if [ -z "$EC2_HOST" ]; then
        echo "‚ùå EC2_HOST n√£o configurado"
        errors=$((errors + 1))
    else
        echo "‚úÖ EC2_HOST: $EC2_HOST"
    fi
    
    if [ -z "$KEY_FILE" ]; then
        echo "‚ùå KEY_FILE n√£o configurado"
        errors=$((errors + 1))
    elif [ ! -f "$KEY_FILE" ]; then
        echo "‚ùå Arquivo de chave n√£o encontrado: $KEY_FILE"
        errors=$((errors + 1))
    else
        echo "‚úÖ KEY_FILE: $KEY_FILE"
        # Verificar e corrigir permiss√µes
        chmod 400 "$KEY_FILE" 2>/dev/null
    fi
    
    if [ $errors -eq 0 ]; then
        echo "‚úÖ Configura√ß√£o v√°lida!"
        return 0
    else
        echo "‚ùå Corrija os erros acima antes de continuar"
        return 1
    fi
}

# ========================================
# FUN√á√ïES DE CONVENI√äNCIA
# ========================================

# Fun√ß√£o para testar conex√£o SSH
test_connection() {
    if check_config; then
        echo "üîê Testando conex√£o SSH..."
        ssh -i "$KEY_FILE" -o ConnectTimeout=10 "$EC2_USER@$EC2_HOST" "echo 'Conex√£o SSH OK'"
    fi
}

# Fun√ß√£o para conectar via SSH
connect() {
    if check_config; then
        echo "üîó Conectando ao servidor..."
        ssh -i "$KEY_FILE" "$EC2_USER@$EC2_HOST"
    fi
}

# Fun√ß√£o para ver logs remotos
remote_logs() {
    if check_config; then
        echo "üìã Logs da aplica√ß√£o:"
        ssh -i "$KEY_FILE" "$EC2_USER@$EC2_HOST" "cd $APP_DIR && pm2 logs $PM2_APP_NAME --lines 20"
    fi
}

# ========================================
# ALIASES √öTEIS
# ========================================

alias deploy-first='./scripts/deploy-manager.sh first-deploy'
alias deploy-update='./scripts/deploy-manager.sh update'
alias deploy-status='./scripts/deploy-manager.sh status'
alias deploy-logs='./scripts/deploy-manager.sh logs'
alias deploy-backup='./scripts/deploy-manager.sh backup'
alias deploy-rollback='./scripts/deploy-manager.sh rollback'
alias deploy-test='./scripts/deploy-manager.sh test'

# ========================================
# MENSAGEM DE BOAS-VINDAS
# ========================================

echo ""
echo "üöÄ SIGMA-PLI Deploy Configuration Loaded"
echo "======================================="
echo ""
echo "Comandos dispon√≠veis:"
echo "  check_config     - Verificar configura√ß√£o"
echo "  test_connection  - Testar SSH"
echo "  connect          - Conectar ao servidor"
echo "  remote_logs      - Ver logs remotos"
echo ""
echo "Aliases dispon√≠veis:"
echo "  deploy-first     - Primeiro deploy"
echo "  deploy-update    - Atualizar aplica√ß√£o"
echo "  deploy-status    - Status da aplica√ß√£o"
echo "  deploy-logs      - Logs da aplica√ß√£o"
echo "  deploy-backup    - Criar backup"
echo "  deploy-rollback  - Rollback"
echo "  deploy-test      - Testar conex√£o"
echo ""

# Verificar configura√ß√£o automaticamente
check_config
